{"version":3,"file":"Checkbox.stories-f19c7c5d.js","sources":["../../../../packages/react/src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import { FC, InputHTMLAttributes, forwardRef, memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport { CheckboxProps } from './Checkbox.types';\n\nconst CheckIcon: FC = () => (\n  <svg width=\"10\" height=\"8\" viewBox=\"0 0 10 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9.76984 0.209376C10.0684 0.496471 10.0777 0.971254 9.79063 1.26983L3.54063 7.76983C3.39625 7.91999 3.19592 8.00333 2.98764 7.9999C2.77936 7.99646 2.58189 7.90656 2.44254 7.75172L0.192536 5.25172C-0.0845584 4.94384 -0.0595996 4.46962 0.248283 4.19253C0.556165 3.91544 1.03038 3.94039 1.30748 4.24828L3.01816 6.14904L8.70938 0.230169C8.99648 -0.0684095 9.47126 -0.0777189 9.76984 0.209376Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport const Checkbox: FC<CheckboxProps> = memo(\n  forwardRef<HTMLLabelElement, CheckboxProps>(\n    (\n      {\n        onChange,\n        disabled,\n        className,\n        isIndeterminate,\n        checkedIcon,\n        indeterminateIcon,\n        children,\n        checked,\n        defaultChecked,\n        hasError = false,\n        ...rest\n      }: CheckboxProps,\n      ref\n    ) => {\n      const prevValue = useRef(!!checked);\n      const [isChecked, setIsChecked] = useState<boolean>(defaultChecked ?? !!checked);\n\n      const checkedIconRender = useMemo(\n        () =>\n          isIndeterminate\n            ? indeterminateIcon || <span className=\"thuiCheckbox__indeterminateIcon\" />\n            : checkedIcon || <CheckIcon />,\n\n        [checkedIcon, indeterminateIcon, isIndeterminate]\n      );\n\n      const changeHandler = useCallback<NonNullable<InputHTMLAttributes<HTMLInputElement>['onChange']>>(\n        (e) => {\n          setIsChecked(e.currentTarget.checked);\n\n          onChange && onChange(e);\n        },\n        [onChange]\n      );\n\n      useEffect(() => {\n        if (checked !== prevValue.current && typeof checked !== 'undefined') {\n          setIsChecked(checked);\n          prevValue.current = checked;\n        }\n      }, [checked]);\n\n      return (\n        <label\n          className={cn('thuiCheckbox', className, {\n            'thuiCheckbox--checked': isChecked,\n            'thuiCheckbox--error': hasError\n          })}\n          ref={ref}\n        >\n          <span className=\"thuiCheckbox__container\">\n            <input\n              {...rest}\n              className=\"thuiCheckbox__input\"\n              onChange={changeHandler}\n              disabled={disabled}\n              checked={isChecked}\n              defaultChecked={defaultChecked}\n              type=\"checkbox\"\n            />\n            <span\n              className={cn('thuiCheckbox__containerInner', {\n                'thuiCheckbox__containerInner--indeterminate': isIndeterminate\n              })}\n            >\n              {isChecked && checkedIconRender}\n            </span>\n          </span>\n          {children && (\n            <span className={cn('thuiCheckbox__text', { 'thuiCheckbox__text--disabled': disabled })}>{children}</span>\n          )}\n        </label>\n      );\n    }\n  )\n);\n"],"names":["CheckIcon","jsx","Checkbox","memo","forwardRef","onChange","disabled","className","isIndeterminate","checkedIcon","indeterminateIcon","children","checked","defaultChecked","hasError","rest","ref","prevValue","useRef","isChecked","setIsChecked","useState","checkedIconRender","useMemo","changeHandler","useCallback","e","useEffect","jsxs","cn"],"mappings":"qIAKA,MAAAA,EAAA,IAAAC,EAAA,MAAA,CAAA,MAAA,KAAA,OAAA,IAAA,QAAA,WAAA,KAAA,OAAA,MAAA,6BAAA,SAAAA,EAEI,OAAC,CAAA,SAAA,UACU,SAAA,UACA,EAAA,uYACP,KAAA,OACG,CACP,CAAA,CAAA,EAIGC,EAAAC,EAAA,KAAoCC,EAAA,WACzC,CAAA,CAEI,SAAAC,EACE,SAAAC,EACA,UAAAC,EACA,gBAAAC,EACA,YAAAC,EACA,kBAAAC,EACA,SAAAC,EACA,QAAAC,EACA,eAAAC,EACA,SAAAC,EAAA,GACW,GAAAC,CACR,EAAAC,IAAA,CAIL,MAAAC,EAAAC,EAAAA,OAAA,CAAA,CAAAN,CAAA,EACA,CAAAO,EAAAC,CAAA,EAAAC,EAAA,SAAAR,GAAA,CAAA,CAAAD,CAAA,EAEAU,EAAAC,EAAA,QAA0B,IAAAf,EAAAE,GAAAT,EAAA,OAAA,CAAA,UAAA,iCAAA,CAAA,EAAAQ,GAAAR,EAAAD,EAAA,CAAA,CAAA,EAIQ,CAAAS,EAAAC,EAAAF,CAAA,CAEgB,EAGlDgB,EAAAC,EAAA,YAAsBC,GAAA,CAElBN,EAAAM,EAAA,cAAA,OAAA,EAEArB,GAAAA,EAAAqB,CAAA,CAAsB,EACxB,CAAArB,CAAA,CACS,EAGXsB,OAAAA,EAAAA,UAAA,IAAA,CACEf,IAAAK,EAAA,SAAA,OAAAL,EAAA,MACEQ,EAAAR,CAAA,EACAK,EAAA,QAAAL,EACF,EAAA,CAAAA,CAAA,CAAA,EAGFgB,EACE,QAAC,CAAA,UAAAC,EAAA,eAAAtB,EAAA,CAC0C,wBAAAY,EACd,sBAAAL,CACF,CAAA,EACxB,IAAAE,EACD,SAAA,CAEAY,EAAA,OAAA,CAAA,UAAA,0BAAA,SAAA,CACE3B,EAAA,QAAC,CAAA,GAAAc,EACK,UAAA,sBACM,SAAAS,EACA,SAAAlB,EACV,QAAAa,EACS,eAAAN,EACT,KAAA,UACK,CAAA,EACPZ,EACA,OAAC,CAAA,UAAA4B,EAAA,+BAAA,CAC+C,8CAAArB,CACG,CAAA,EAChD,SAAAW,GAAAG,CAEa,CAAA,CAChB,EAAA,EACFX,GAAAV,EAAA,OAAA,CAAA,UAAA4B,EAAA,qBAAA,CAAA,+BAAAvB,EAAA,EAAA,SAAAK,CAAA,CAAA,CAEqG,CAAA,CAAA,CAEvG,CAEJ,CAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}