import{j as T}from"./jsx-runtime-86dfebf6.js";import{r as u}from"./index-1b03fe98.js";import{c as w}from"./index-ac76e34c.js";const x=["1","2","3","4","5","6"],b=(a,l)=>{switch(a){case"heading":return l in x?`h${l}`:"h1";case"paragraph":return"p";case"compact":return"span";default:return"p"}},i=u.memo(u.forwardRef((a,l)=>{const{children:o,type:t="paragraph",weight:s="normal",size:n="medium",tag:p,color:e,className:m="",onClick:d,tabIndex:c,title:v="",withTruncate:h=!1}=a,y=p||b(t,n),r=e&&!(e!=null&&e.includes("#"))?`var(--${e})`:e,f=r?{color:r}:void 0,g=w("thuiTypography",`thuiTypography--${t}`,`thuiTypography--${s}Weight`,`thuiTypography--${n}`,m,{"thuiTypography--truncate":h});return T(y,{className:g,style:f,onClick:d,tabIndex:c,title:v,ref:l,children:o})}));try{i.displayName="Typography",i.__docgenInfo={description:`any ref's type for now.
Error with resolving ref-types (inside or outside of component)
Type with intersections (HTMLDivElement & HTMLSpanElement)) works in component, but move error to outside useRef<Type>`,displayName:"Typography",props:{type:{defaultValue:null,description:"Type name",name:"type",required:!1,type:{name:"enum",value:[{value:'"heading"'},{value:'"paragraph"'},{value:'"compact"'}]}},size:{defaultValue:null,description:"Size name",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'},{value:'"xSmall"'},{value:'"1"'},{value:'"2"'},{value:'"3"'},{value:'"4"'},{value:'"5"'},{value:'"6"'}]}},weight:{defaultValue:null,description:"Wight name",name:"weight",required:!1,type:{name:"enum",value:[{value:'"medium"'},{value:'"thin"'},{value:'"extraLight"'},{value:'"light"'},{value:'"normal"'},{value:'"semiBold"'},{value:'"bold"'},{value:'"extraBold"'},{value:'"black"'}]}},tag:{defaultValue:null,description:"Custom tag",name:"tag",required:!1,type:{name:"enum",value:[{value:'"option"'},{value:'"label"'},{value:'"div"'},{value:'"span"'},{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'},{value:'"p"'}]}},className:{defaultValue:null,description:"Additional class names",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Color name",name:"color",required:!1,type:{name:"(string & Record<never, never>)"}},onClick:{defaultValue:null,description:"Click event handler",name:"onClick",required:!1,type:{name:"(() => void)"}},tabIndex:{defaultValue:null,description:"Tabindex",name:"tabIndex",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"Title attribute",name:"title",required:!1,type:{name:"string"}},withTruncate:{defaultValue:null,description:"Cut text if it overflow one line",name:"withTruncate",required:!1,type:{name:"boolean"}}}}}catch{}export{i as T};
