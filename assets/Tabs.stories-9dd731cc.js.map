{"version":3,"file":"Tabs.stories-9dd731cc.js","sources":["../../../../packages/react/src/components/Tabs/TabsContext/TabsContext.tsx","../../../../packages/react/src/components/Tabs/Tab/Tab.tsx","../../../../packages/react/src/components/Tabs/TabList/TabList.tsx","../../../../packages/react/src/components/Tabs/Tabs.tsx","../../../../packages/react/src/components/Tabs/TabPanel/TabPanel.tsx"],"sourcesContent":["import { Context as TContext, createContext, ReactNode, useContext, useEffect, useState } from 'react';\n\nexport interface TabContextValue {\n  prefix?: string;\n  activeTab: string;\n  onTabChange: (value: string) => void;\n}\n\ninterface TabsContextProps {\n  children: ReactNode | ReactNode[];\n  value: TabContextValue;\n}\n\nconst useUniquePrefix = () => {\n  const [id, setId] = useState('');\n\n  useEffect(() => {\n    setId(`thui-tabs-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n\n  return id;\n};\n\nconst Context: TContext<TabContextValue> = createContext<TabContextValue>({\n  prefix: '',\n  activeTab: '',\n  onTabChange: () => {}\n});\n\nexport const TabsContext = ({ children, value }: TabsContextProps) => {\n  const prefix = useUniquePrefix();\n\n  return <Context.Provider value={{ ...value, prefix }}>{children}</Context.Provider>;\n};\n\nexport const useTabsContext = () => useContext(Context);\n\nexport const getTabId = (prefix: string | undefined, value: string) => `${prefix}-tab-${value}`;\n\nexport const getPanelId = (prefix: string | undefined, value: string) => `${prefix}-panel-${value}`;\n","import React, { useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { getPanelId, getTabId, useTabsContext } from '../TabsContext/TabsContext';\n\nimport { TabProps } from './Tab.types';\n\nconst RCN = 'thuiTab';\n\nexport const Tab = ({ value, label = value, size = 'md', inactive = false, className, renderTab }: TabProps) => {\n  const { prefix, activeTab, onTabChange } = useTabsContext();\n\n  const isSelected = useMemo(() => value === activeTab, [value, activeTab]);\n\n  const tabCnString = cn(RCN, { [`${RCN}__selected`]: isSelected }, `${RCN}--${size}`, className);\n\n  return (\n    <button\n      role=\"tab\"\n      id={getTabId(prefix, value)}\n      tabIndex={isSelected ? 0 : -1}\n      disabled={inactive}\n      aria-disabled={inactive}\n      aria-selected={isSelected}\n      aria-controls={getPanelId(prefix, value)}\n      onClick={() => onTabChange(value)}\n      className={tabCnString}\n    >\n      {renderTab ? renderTab() : label}\n    </button>\n  );\n};\n","import React, {\n  Children,\n  cloneElement,\n  isValidElement,\n  ReactElement,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport cn from 'classnames';\n\nimport { Tab } from '../Tab/Tab';\nimport { useTabsContext } from '../TabsContext/TabsContext';\nimport { TabProps } from '../Tab/Tab.types';\n\nimport { TabListProps } from './TabList.types';\n\nconst RCN = 'thuiTabList';\n\nexport const TabList = ({\n  direction = 'horizontal',\n  size = 'md',\n  disabled = false,\n  className,\n  children\n}: TabListProps) => {\n  const tabListCnString = cn(RCN, `${RCN}--${direction}`, `${RCN}--${size}`, className);\n\n  const { activeTab } = useTabsContext();\n\n  const [activeTabCoordinates, setActiveTabCoordinates] = useState<{\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n  }>({ left: 0, top: 0, width: 0, height: 0 });\n\n  const tabListRef = useRef<HTMLDivElement>(null);\n  const prevButton = useMemo(() => (direction === 'horizontal' ? 'ArrowLeft' : 'ArrowUp'), [direction]);\n\n  const nextButton = useMemo(() => (direction === 'horizontal' ? 'ArrowRight' : 'ArrowDown'), [direction]);\n\n  // filter children and exclude non-tabs elements\n  const childrenList = useMemo(\n    () =>\n      Children.map(children, (child) => {\n        if (!isValidElement(child) || child.type !== Tab) return null;\n\n        return cloneElement(child, {\n          ...child.props,\n          ...(disabled && {\n            inactive: true,\n            ariaDisabled: true\n          }),\n          size\n        }) as ReactElement<TabProps>;\n      }),\n    [children, disabled, size]\n  );\n\n  useEffect(() => {\n    const currentActiveTab = tabListRef.current?.querySelector('[aria-selected=\"true\"]') as HTMLElement;\n\n    setActiveTabCoordinates({\n      left: currentActiveTab?.offsetLeft ?? 0,\n      top: currentActiveTab?.offsetTop ?? 0,\n      width: currentActiveTab?.offsetWidth ?? 0,\n      height: currentActiveTab?.offsetHeight ?? 0\n    });\n  }, [activeTab]);\n\n  const findPreviousTab = (currentFocus: Element): HTMLElement | null => {\n    let prev;\n\n    const list = tabListRef.current;\n\n    if (!list) return null;\n\n    if (currentFocus === list.firstElementChild) {\n      prev = list.lastElementChild;\n    } else {\n      prev = currentFocus?.previousElementSibling;\n    }\n\n    if (prev?.ariaDisabled === 'true') {\n      return findPreviousTab(prev);\n    } else {\n      return prev as HTMLElement;\n    }\n  };\n\n  const findNextTab = (currentFocus: Element | HTMLElement): HTMLElement | null => {\n    let next;\n\n    const list = tabListRef.current;\n\n    if (!list) return null;\n\n    if (currentFocus === list.lastElementChild) {\n      next = list.firstElementChild;\n    } else {\n      next = currentFocus?.nextElementSibling;\n    }\n\n    if (next?.ariaDisabled === 'true') {\n      return findNextTab(next);\n    } else {\n      return next as HTMLElement;\n    }\n  };\n\n  // handle keyboard navigation\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === prevButton || event.key === nextButton) event.preventDefault();\n\n    const currentFocus = document.activeElement;\n    const list = tabListRef.current;\n    const role = currentFocus?.getAttribute('role');\n\n    if (!currentFocus || role !== 'tab' || !list?.contains(currentFocus)) {\n      return null;\n    }\n\n    switch (event.key) {\n      case prevButton: {\n        findPreviousTab(currentFocus)?.focus();\n        break;\n      }\n      case nextButton: {\n        findNextTab(currentFocus)?.focus();\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <div\n        ref={tabListRef}\n        className={tabListCnString}\n        role=\"tablist\"\n        aria-orientation={direction}\n        onKeyDown={handleKeyDown}\n      >\n        {childrenList}\n      </div>\n      <div className={cn(`${RCN}__line`, `${RCN}__line--${direction}`)}>\n        <div\n          className={cn(`${RCN}__indicator`, `${RCN}__indicator--${direction}`)}\n          style={{\n            ...(direction === 'horizontal'\n              ? {\n                  left: activeTabCoordinates?.left,\n                  width: activeTabCoordinates?.width\n                }\n              : { top: activeTabCoordinates?.top, height: activeTabCoordinates?.height })\n          }}\n        />\n      </div>\n    </>\n  );\n};\n","import React, { forwardRef, memo, useCallback, useMemo, useState } from 'react';\nimport cn from 'classnames';\n\nimport { TabsProps } from './Tabs.types';\nimport { TabContextValue, TabsContext } from './TabsContext/TabsContext';\nimport { Tab } from './Tab/Tab';\nimport { TabList } from './TabList/TabList';\n\nconst RCN = 'thuiTabs';\n\nexport const Tabs = memo(\n  forwardRef<HTMLDivElement, TabsProps>(\n    (\n      {\n        tabs,\n        value,\n        defaultValue,\n        renderTab,\n        direction = 'horizontal',\n        size = 'md',\n        disabled = false,\n        onChange,\n        className,\n        children\n      },\n      ref\n    ) => {\n      const tabCnString = cn(RCN, className);\n\n      const renderTabs = useMemo(\n        () => (\n          <TabList initialValue={value} direction={direction} size={size} disabled={disabled}>\n            {tabs.map((tab) => (\n              <Tab key={tab.value} renderTab={renderTab ? () => renderTab(tab) : undefined} {...tab} />\n            ))}\n          </TabList>\n        ),\n        [value, direction, size, disabled, tabs, renderTab]\n      );\n\n      const [activeTab, setActiveTab] = useState(defaultValue ?? value ?? tabs[0].value);\n\n      const valueExists = useMemo(() => value !== null && value !== undefined, [value]);\n\n      const handleTabChange = useCallback(\n        (val: string) => {\n          !valueExists && setActiveTab(val);\n          onChange?.(val);\n        },\n        [valueExists, onChange]\n      );\n\n      const tabsContextValue: TabContextValue = useMemo(\n        () => ({\n          activeTab: value ?? activeTab,\n          onTabChange: handleTabChange\n        }),\n        [value, activeTab, handleTabChange]\n      );\n\n      return (\n        <TabsContext value={tabsContextValue}>\n          <div ref={ref} className={tabCnString}>\n            {renderTabs}\n            {children}\n          </div>\n        </TabsContext>\n      );\n    }\n  )\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { getPanelId, getTabId, useTabsContext } from '../TabsContext/TabsContext';\n\nimport { TabPanelProps } from './TabPanel.types';\n\nconst RCN = 'thuiTabPanel';\n\nexport const TabPanel = ({ children, value, className }: TabPanelProps) => {\n  const tabPanelCnString = cn(RCN, className);\n  const { activeTab, prefix } = useTabsContext();\n\n  return (\n    <div\n      id={getPanelId(prefix, value)}\n      className={tabPanelCnString}\n      role=\"tabpanel\"\n      tabIndex={0}\n      aria-labelledby={getTabId(prefix, value)}\n      hidden={activeTab !== value}\n    >\n      {children}\n    </div>\n  );\n};\n"],"names":["useUniquePrefix","id","setId","useState","useEffect","Context","createContext","TabsContext","children","value","prefix","jsx","useTabsContext","useContext","getTabId","getPanelId","RCN","Tab","label","size","inactive","className","renderTab","activeTab","onTabChange","isSelected","useMemo","tabCnString","cn","TabList","direction","disabled","tabListCnString","activeTabCoordinates","setActiveTabCoordinates","tabListRef","useRef","prevButton","nextButton","childrenList","Children","child","isValidElement","cloneElement","currentActiveTab","_a","findPreviousTab","currentFocus","prev","list","findNextTab","next","jsxs","Fragment","event","role","_b","Tabs","memo","forwardRef","tabs","defaultValue","onChange","ref","renderTabs","tab","setActiveTab","valueExists","handleTabChange","useCallback","val","tabsContextValue","TabPanel","tabPanelCnString"],"mappings":"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"}