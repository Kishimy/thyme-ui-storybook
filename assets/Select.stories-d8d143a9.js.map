{"version":3,"file":"Select.stories-d8d143a9.js","sources":["../../../../node_modules/@floating-ui/react-dom/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../../../node_modules/@floating-ui/react-dom/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../../../node_modules/@floating-ui/react-dom/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../../../../node_modules/@floating-ui/react-dom/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../../../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs","../../../../packages/react/src/components/Select/icons/chevron-up.tsx","../../../../packages/react/src/components/Select/icons/chevron-down.tsx","../../../../packages/react/src/components/Select/icons/x-mark.tsx","../../../../packages/react/src/components/Select/icons/magnifier.tsx","../../../../packages/react/src/components/Select/Select.tsx","../../../../packages/react/src/components/Select/stories/icons/otter.tsx","../../../../packages/react/src/components/Select/stories/icons/dove.tsx","../../../../packages/react/src/components/Select/stories/icons/kiwi.tsx","../../../../packages/react/src/components/Select/stories/icons/paw.tsx"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isTopLayer(currentNode)) {\n      return null;\n    }\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        isPositioned: true\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n","const chevronUp = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n    <path d=\"M233.4 105.4c12.5-12.5 32.8-12.5 45.3 0l192 192c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L256 173.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l192-192z\" />\n  </svg>\n);\n\nexport default chevronUp;\n","const chevronDown = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n    <path d=\"M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z\" />\n  </svg>\n);\n\nexport default chevronDown;\n","const xMark = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\">\n    <path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" />\n  </svg>\n);\n\nexport default xMark;\n","const magnifier = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n    <path d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z\" />\n  </svg>\n);\n\nexport default magnifier;\n","import React, {\n  ChangeEvent,\n  forwardRef,\n  memo,\n  ReactElement,\n  Ref,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport cn from 'classnames';\nimport { CommonSelectOption } from '@thyme-ui/types';\nimport { useFloating, size as floatingSize, autoUpdate, flip as floatingFlip } from '@floating-ui/react-dom';\n\nimport { Label } from '../Label';\nimport { Chip } from '../Chip';\n\nimport type { SelectProps } from './Select.types';\nimport chevronUp from './icons/chevron-up';\nimport chevronDown from './icons/chevron-down';\nimport xMark from './icons/x-mark';\nimport magnifier from './icons/magnifier';\n\n// @TODO: move later\nenum EKeyboardCodes {\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n  ENTER = 'Enter',\n  ESCAPE = 'Escape',\n  SPACE = 'Space',\n  TAB = 'Tab'\n}\n\nconst popoverRootDefault = document.getElementsByTagName('body')[0];\n\nconst RCN = 'thuiSelect';\n\nconst SelectComponent = <T extends CommonSelectOption = CommonSelectOption>(\n  {\n    id,\n    name,\n    options,\n    defaultSelectedValue,\n    value,\n    label,\n    placeholder,\n    searchPlaceholder = 'Search...',\n    disabled,\n    multiple,\n    renderOption,\n    renderTag,\n    emptyOptionsPlaceholder = <div className={`${RCN}__empty-options`}>No options</div>,\n    emptySearchPlaceholder = <div className={`${RCN}__empty-options`}>No results found</div>,\n    // if user doesn't pass custom icons use default\n    arrowDownIcon = chevronDown,\n    arrowUpIcon = chevronUp,\n    clearIcon = xMark,\n    searchIcon = magnifier,\n    removeTagIcon = xMark,\n    size = 'md',\n    optionsListSize = 'full',\n    isClearable = false,\n    isSearchable = false,\n    searchFunc,\n    isInvalid,\n    isRequired,\n    isInitiallyExpanded = false,\n    error,\n    isExpanded,\n    onExpand,\n    onCollapse,\n    onSelect,\n    onSearch,\n    onClear,\n    popoverRoot = popoverRootDefault,\n    placement = 'bottom-start',\n    fitViewPort,\n    flip\n  }: SelectProps<T>,\n  ref: Ref<HTMLDivElement>\n) => {\n  const selectCnString = cn(RCN, `${RCN}--${size}`, {\n    [`${RCN}--invalid`]: isInvalid,\n    [`${RCN}--disabled`]: disabled,\n    [`${RCN}--required`]: isRequired\n  });\n\n  const selectRef = useRef<HTMLButtonElement>(null);\n  const optionsListRef = useRef<HTMLDivElement | null>(null);\n\n  const isExpandControlled = isExpanded !== undefined && onExpand !== undefined && onCollapse !== undefined;\n\n  const [localIsExpanded, setLocalIsExpanded] = useState(isInitiallyExpanded);\n\n  const expanded = useMemo(\n    () => (isExpandControlled ? isExpanded : localIsExpanded),\n    [isExpandControlled, isExpanded, localIsExpanded]\n  ); \n\n  const { refs, floatingStyles } = useFloating({\n    open: expanded,\n    strategy: 'fixed',\n    placement,\n    whileElementsMounted: (referenceEl, floatingEl, update) => {\n      return autoUpdate(referenceEl, floatingEl, update, {\n        // Prevents shifting during anchor transition\n        layoutShift: false,\n      });\n    },\n    middleware: [\n      flip && floatingFlip(),\n      optionsListSize === 'full' && floatingSize({\n        apply({ rects, elements }) {\n          Object.assign(elements.floating.style, {\n            width: `${rects.reference.width}px`\n          });\n        }\n      }),\n      fitViewPort && floatingSize({\n        apply({ availableHeight, elements }) {\n          elements.floating.style.maxHeight = `${availableHeight}px`;\n        }\n      })\n    ],\n  });\n\n  const [localValue, setLocalValue] = useState<T['value'] | T['value'][] | undefined>(\n    defaultSelectedValue ?? undefined\n  );\n\n  const currentValue = useMemo(() => value ?? localValue, [localValue, value]);\n\n  const [activeOption, setActiveOption] = useState<T['value'] | null>(null);\n\n  const clearActiveOption = useCallback(() => setActiveOption(null), []);\n\n  const [showClearIcon, setShowClearIcon] = useState(false);\n\n  const isDirty = useMemo(\n    () => (Array.isArray(currentValue) ? currentValue.length > 0 : !!currentValue),\n    [currentValue]\n  );\n\n  const isSearchControlled = onSearch !== undefined;\n  const [localSearch, setLocalSearch] = useState('');\n\n  const handleExpand = useCallback(() => {\n    if (isExpandControlled) {\n      onExpand?.();\n    } else {\n      setLocalIsExpanded(true);\n    }\n\n    if (selectRef.current) selectRef.current.ariaExpanded = 'true';\n    if (currentValue && !Array.isArray(currentValue)) setActiveOption(currentValue);\n  }, [isExpandControlled, currentValue, onExpand]);\n\n  const handleCollapse = useCallback(() => {\n    if (isExpandControlled) {\n      onCollapse?.();\n    } else {\n      setLocalIsExpanded(false);\n    }\n\n    if (selectRef.current) selectRef.current.ariaExpanded = 'false';\n    if (activeOption) clearActiveOption();\n    if (localSearch.length > 0) setLocalSearch('');\n  }, [isExpandControlled, activeOption, clearActiveOption, localSearch.length, onCollapse]);\n\n  const toggleExpanded = useCallback(\n    (event: MouseEvent | React.MouseEvent) => {\n      event.stopPropagation();\n      if (expanded) {\n        handleCollapse();\n      } else {\n        handleExpand();\n      }\n    },\n    [expanded, handleCollapse, handleExpand]\n  );\n\n  const handleSelect = useCallback(\n    (optionValue: T['value']) => () => {\n      if (onSelect) {\n        onSelect(optionValue);\n      } else {\n        multiple ? setLocalValue([...(currentValue as string[]), optionValue]) : setLocalValue(optionValue);\n      }\n\n      if (!multiple) {\n        handleCollapse();\n      }\n    },\n    [currentValue, handleCollapse, multiple, onSelect]\n  );\n\n  const handleClear = useCallback(() => {\n    if (isDirty) {\n      if (onClear) {\n        onClear();\n      } else {\n        setLocalValue(undefined);\n      }\n    }\n  }, [isDirty, onClear]);\n\n  const handleArrowClick = useCallback(\n    (event: MouseEvent | React.MouseEvent) => {\n      if (isClearable && isDirty) {\n        handleClear();\n      } else {\n        toggleExpanded(event);\n      }\n    },\n    [handleClear, isClearable, isDirty, toggleExpanded]\n  );\n\n  const handleSearchChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      event.stopPropagation();\n\n      const searchValue = event.target.value;\n\n      if (isSearchControlled) onSearch(searchValue);\n      else setLocalSearch(searchValue);\n    },\n    [isSearchControlled, onSearch]\n  );\n\n  const handleClickOutside = useCallback(\n    (event: MouseEvent) => {\n      if (\n        optionsListRef.current &&\n        !optionsListRef.current.contains(event.target as Node) &&\n        !selectRef.current?.contains(event.target as Node)\n      ) {\n        if (expanded) handleCollapse();\n      }\n    },\n    [expanded, handleCollapse]\n  );\n\n  const handleKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      const select = selectRef.current;\n      const code = event.code as EKeyboardCodes;\n      const openKeys = [EKeyboardCodes.ARROW_UP, EKeyboardCodes.ARROW_DOWN, EKeyboardCodes.ENTER, EKeyboardCodes.SPACE];\n      const navigateKeys = [EKeyboardCodes.ARROW_UP, EKeyboardCodes.ARROW_DOWN];\n      const closeKeys = [EKeyboardCodes.ESCAPE, EKeyboardCodes.TAB];\n      const selectKeys = [EKeyboardCodes.ENTER, EKeyboardCodes.SPACE];\n\n      // EXPAND WHEN FOCUSED\n      if (document.activeElement === select && !expanded && openKeys.includes(code)) {\n        event.preventDefault();\n        handleExpand();\n      } else if (expanded) {\n        // NAVIGATE THROUGH OPTIONS\n        if (navigateKeys.includes(code)) {\n          event.preventDefault();\n          const activeOptionIndex = options.findIndex((option) => option.value === activeOption);\n\n          if (code === EKeyboardCodes.ARROW_UP) {\n            const nextOption = activeOption ? options[activeOptionIndex - 1] : options[options.length - 1];\n\n            if (nextOption) setActiveOption(nextOption.value);\n          }\n\n          if (code === EKeyboardCodes.ARROW_DOWN) {\n            const nextOption = activeOption ? options[activeOptionIndex + 1] : options[0];\n\n            if (nextOption) setActiveOption(nextOption.value);\n          }\n        }\n\n        // COLLAPSE\n        if (closeKeys.includes(code)) {\n          handleCollapse();\n        }\n\n        // SELECT ON SPACE/ENTER\n        if (selectKeys.includes(code) && activeOption) {\n          if (code === EKeyboardCodes.SPACE) {\n            event.preventDefault();\n          }\n\n          if (Array.isArray(currentValue) || (!Array.isArray(currentValue) && activeOption !== currentValue)) {\n            handleSelect(activeOption)();\n          } else {\n            handleCollapse();\n          }\n        }\n      }\n    },\n    [expanded, handleExpand, activeOption, options, handleCollapse, currentValue, handleSelect]\n  );\n\n  const displayOptionsList = useMemo(() => {\n    if (!options.length) {\n      return emptyOptionsPlaceholder;\n    }\n\n    const optionsList =\n      isSearchable && !isSearchControlled && localSearch.length > 0\n        ? options?.filter((option) =>\n            searchFunc\n              ? searchFunc(localSearch, option)\n              : String(option.value).toLowerCase()\n                  .includes(localSearch.toLowerCase())\n          )\n        : options;\n\n    if (!optionsList?.length) {\n      return emptySearchPlaceholder;\n    }\n\n    return (\n      <>\n        {optionsList.map((option) => (\n          <li\n            role=\"option\"\n            className={cn({\n              ['thuiOptions__option']: !renderOption,\n              ['thuiOptions__option--active']: !renderOption && option.value === activeOption\n            })}\n            key={option.value}\n            value={option.value}\n            onMouseEnter={clearActiveOption}\n            onClick={handleSelect(option.value)}\n          >\n            {renderOption ? renderOption(option, option.value === activeOption) : option.label}\n          </li>\n        ))}\n      </>\n    );\n  }, [\n    options,\n    isSearchable,\n    isSearchControlled,\n    localSearch,\n    emptyOptionsPlaceholder,\n    searchFunc,\n    emptySearchPlaceholder,\n    renderOption,\n    activeOption,\n    clearActiveOption,\n    handleSelect\n  ]);\n\n  const handleRemoveMultiple = useCallback(\n    (optionValue: T['value']) => (event: MouseEvent | React.MouseEvent) => {\n      event.stopPropagation();\n\n      handleSelect(optionValue)();\n    },\n    [handleSelect]\n  );\n\n  const renderValue = useMemo(() => {\n    if (Array.isArray(currentValue)) {\n      return isDirty ? (\n        <div className={`${RCN}__tags-wrapper`}>\n          {currentValue?.map((optionValue) => {\n            const optionToRender = options.find((option) => option.value === optionValue);\n            if (!optionToRender) return null;\n\n            return renderTag ? (\n              renderTag(optionToRender)\n            ) : (\n              <Chip\n                className={`${RCN}__tag`}\n                key={`${name}_${optionToRender.value}`}\n                title={optionToRender.label}\n                size={size}\n                iconRight={\n                  <div className={`${RCN}__tag-remove`} onClick={handleRemoveMultiple(optionToRender.value)}>\n                    {removeTagIcon}\n                  </div>\n                }\n              ></Chip>\n            );\n          })}\n        </div>\n      ) : (\n        <span className={`${RCN}__placeholder`}>{placeholder}</span>\n      );\n    } else {\n      const optionToRender = options.find((option) => option.value === currentValue);\n\n      if (!optionToRender) return <span className={`${RCN}__placeholder`}>{placeholder}</span>;\n\n      return optionToRender?.label;\n    }\n  }, [currentValue, handleRemoveMultiple, isDirty, name, options, placeholder, removeTagIcon, renderTag, size]);\n\n  const setOptionsRefHandler = useCallback((el: HTMLDivElement | null) => {\n    optionsListRef.current = el;\n    refs.setFloating(el);\n  }, [refs]);\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    document.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [handleClickOutside, handleKeydown]);\n\n  return (\n    <div className={selectCnString} ref={ref}>\n      <div className={`${RCN}__select-wrapper`} ref={refs.setReference}>\n        <button\n          ref={selectRef}\n          id={id}\n          name={name}\n          className={`${RCN}__select`}\n          disabled={disabled}\n          onClick={toggleExpanded}\n          type=\"button\"\n          role=\"combobox\"\n          aria-labelledby=\"select button\"\n          aria-haspopup=\"listbox\"\n          aria-expanded=\"false\"\n          aria-controls=\"select-dropdown\"\n        >\n          {renderValue}\n        </button>\n        <div\n          className={cn(`${RCN}__select-icon`, `${RCN}__select-icon--${size}`)}\n          onClick={handleArrowClick}\n          onMouseEnter={() => setShowClearIcon(true)}\n          onMouseLeave={() => setShowClearIcon(false)}\n        >\n          {isClearable && showClearIcon && isDirty ? clearIcon : expanded ? arrowUpIcon : arrowDownIcon}\n        </div>\n      </div>\n      {/* @TODO: separate thuiDropdown */}\n      {expanded && createPortal(\n        <div\n          className={cn(\n            'thuiDropdown',\n            `thuiDropdown--${size}`\n          )}\n          style={{\n            ...floatingStyles,\n            ...(typeof optionsListSize === 'number' && { width: `${optionsListSize}px` })\n          }}\n          ref={setOptionsRefHandler}\n        >\n          {/* @TODO: separate thuiOptions */}\n          <ul role=\"listbox\" className=\"thuiOptions\">\n            {isSearchable && (\n              <li className={cn(`thuiOptions__search`)}>\n                <input\n                  className={`thuiOptions__search-input`}\n                  placeholder={searchPlaceholder}\n                  onChange={handleSearchChange}\n                  autoFocus\n                />\n                <div className={cn(`thuiOptions__search-icon`, `thuiOptions__search-icon--${size}`)}>{searchIcon}</div>\n              </li>\n            )}\n            {displayOptionsList}\n          </ul>\n        </div>,\n        popoverRoot\n      )}\n\n      {label && (\n        <Label label={label} htmlFor={name} isRequired={isRequired} className={`${RCN}__label`} disabled={disabled} />\n      )}\n      {error && <div className={cn(`${RCN}__error`, `${RCN}__error--${size}`)}>{error}</div>}\n    </div>\n  );\n};\n\nexport const Select = memo(forwardRef(SelectComponent)) as <T extends CommonSelectOption = CommonSelectOption>(\n  props: SelectProps<T> & { ref?: Ref<HTMLDivElement> }\n) => ReactElement;\n","const otter = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\n    <path d=\"M181.5 197.1l12.9 6.4c5.9 3 12.4 4.5 19.1 4.5c23.5 0 42.6-19.1 42.6-42.6V144c0-35.3-28.7-64-64-64H128c-35.3 0-64 28.7-64 64v21.4c0 23.5 19.1 42.6 42.6 42.6c6.6 0 13.1-1.5 19.1-4.5l12.9-6.4 8.4-4.2L135.1 185c-4.5-3-7.1-8-7.1-13.3V168c0-13.3 10.7-24 24-24h16c13.3 0 24 10.7 24 24v3.7c0 5.3-2.7 10.3-7.1 13.3l-11.8 7.9 8.4 4.2zm-8.6 49.4L160 240l-12.9 6.4c-12.6 6.3-26.5 9.6-40.5 9.6c-3.6 0-7.1-.2-10.6-.6v.6c0 35.3 28.7 64 64 64h64c17.7 0 32 14.3 32 32s-14.3 32-32 32H384V336 320c0-23.7 12.9-44.4 32-55.4c9.4-5.4 20.3-8.6 32-8.6V240c0-26.5 21.5-48 48-48c8.8 0 16 7.2 16 16v32 16 48c0 8.8 7.2 16 16 16s16-7.2 16-16V204.3c0-48.2-30.8-91-76.6-106.3l-8.5-2.8c-8-2.7-12.6-11.1-10.4-19.3s10.3-13.2 18.6-11.6l19.9 4C576 86.1 640 164.2 640 254.9l0 1.1h0c0 123.7-100.3 224-224 224h-1.1H256h-.6C132 480 32 380 32 256.6V256 216.8c-10.1-14.6-16-32.3-16-51.4V144l0-1.4C6.7 139.3 0 130.5 0 120c0-13.3 10.7-24 24-24h2.8C44.8 58.2 83.3 32 128 32h64c44.7 0 83.2 26.2 101.2 64H296c13.3 0 24 10.7 24 24c0 10.5-6.7 19.3-16 22.6l0 1.4v21.4c0 1.4 0 2.8-.1 4.3c12-6.2 25.7-9.6 40.1-9.6h8c17.7 0 32 14.3 32 32s-14.3 32-32 32h-8c-13.3 0-24 10.7-24 24v8h56.4c-15.2 17-24.4 39.4-24.4 64H320c-42.3 0-78.2-27.4-91-65.3c-5.1 .9-10.3 1.3-15.6 1.3c-14.1 0-27.9-3.3-40.5-9.6zM96 128a16 16 0 1 1 0 32 16 16 0 1 1 0-32zm112 16a16 16 0 1 1 32 0 16 16 0 1 1 -32 0z\" />\n  </svg>\n);\n\nexport default otter;\n","const dove = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n    <path d=\"M160.8 96.5c14 17 31 30.9 49.5 42.2c25.9 15.8 53.7 25.9 77.7 31.6V138.8C265.8 108.5 250 71.5 248.6 28c-.4-11.3-7.5-21.5-18.4-24.4c-7.6-2-15.8-.2-21 5.8c-13.3 15.4-32.7 44.6-48.4 87.2zM320 144v30.6l0 0v1.3l0 0 0 32.1c-60.8-5.1-185-43.8-219.3-157.2C97.4 40 87.9 32 76.6 32c-7.9 0-15.3 3.9-18.8 11C46.8 65.9 32 112.1 32 176c0 116.9 80.1 180.5 118.4 202.8L11.8 416.6C6.7 418 2.6 421.8 .9 426.8s-.8 10.6 2.3 14.8C21.7 466.2 77.3 512 160 512c3.6 0 7.2-1.2 10-3.5L245.6 448H320c88.4 0 160-71.6 160-160V128l29.9-44.9c1.3-2 2.1-4.4 2.1-6.8c0-6.8-5.5-12.3-12.3-12.3H400c-44.2 0-80 35.8-80 80zm80-16a16 16 0 1 1 0 32 16 16 0 1 1 0-32z\" />\n  </svg>\n);\n\nexport default dove;\n","const kiwi = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\">\n    <path d=\"M291.2 388.4c31.2-18.8 64.7-36.4 101.1-36.4H448c4.6 0 9.1-.2 13.6-.7l85.3 121.9c4 5.7 11.3 8.2 17.9 6.1s11.2-8.3 11.2-15.3V224c0-70.7-57.3-128-128-128H392.3c-36.4 0-69.9-17.6-101.1-36.4C262.3 42.1 228.3 32 192 32C86 32 0 118 0 224c0 71.1 38.6 133.1 96 166.3V456c0 13.3 10.7 24 24 24s24-10.7 24-24V410c15.3 3.9 31.4 6 48 6c5.4 0 10.7-.2 16-.7V456c0 13.3 10.7 24 24 24s24-10.7 24-24V405.1c12.4-4.4 24.2-10 35.2-16.7zM448 200a24 24 0 1 1 0 48 24 24 0 1 1 0-48z\" />\n  </svg>\n);\n\nexport default kiwi;\n","const paw = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n    <path d=\"M226.5 92.9c14.3 42.9-.3 86.2-32.6 96.8s-70.1-15.6-84.4-58.5s.3-86.2 32.6-96.8s70.1 15.6 84.4 58.5zM100.4 198.6c18.9 32.4 14.3 70.1-10.2 84.1s-59.7-.9-78.5-33.3S-2.7 179.3 21.8 165.3s59.7 .9 78.5 33.3zM69.2 401.2C121.6 259.9 214.7 224 256 224s134.4 35.9 186.8 177.2c3.6 9.7 5.2 20.1 5.2 30.5v1.6c0 25.8-20.9 46.7-46.7 46.7c-11.5 0-22.9-1.4-34-4.2l-88-22c-15.3-3.8-31.3-3.8-46.6 0l-88 22c-11.1 2.8-22.5 4.2-34 4.2C84.9 480 64 459.1 64 433.3v-1.6c0-10.4 1.6-20.8 5.2-30.5zM421.8 282.7c-24.5-14-29.1-51.7-10.2-84.1s54-47.3 78.5-33.3s29.1 51.7 10.2 84.1s-54 47.3-78.5 33.3zM310.1 189.7c-32.3-10.6-46.9-53.9-32.6-96.8s52.1-69.1 84.4-58.5s46.9 53.9 32.6 96.8s-52.1 69.1-84.4 58.5z\" />\n  </svg>\n);\n\nexport default paw;\n"],"names":["min","max","round","floor","createCoords","v","oppositeSideMap","oppositeAlignmentMap","evaluate","value","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getSideList","side","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","x","y","width","height","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","config","strategy","middleware","platform","validMiddleware","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","detectOverflow","state","options","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","flip","_middlewareData$arrow","_middlewareData$flip","initialPlacement","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","initialSideAxis","isBasePlacement","fallbackPlacements","hasFallbackAxisSideDirection","placements","overflow","overflows","overflowsData","sides","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","d","a","b","_overflowsData$filter2","currentSideAxis","acc","size","apply","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","getNodeName","node","isNode","getWindow","_node$ownerDocument","getDocumentElement","isElement","isHTMLElement","isShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","isTableElement","isTopLayer","selector","isContainingBlock","webkit","isWebKit","css","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","getNodeScroll","result","getNearestOverflowAncestor","parentNode","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","$","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","getBoundingClientRect","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","left","top","convertOffsetParentRelativeRectToViewportRelativeRect","documentElement","topLayer","scroll","offsets","isOffsetParentAnElement","offsetRect","getClientRects","getWindowScrollBarX","getDocumentRect","html","body","getViewportRect","visualViewport","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","isStaticPositioned","getTrueOffsetParent","polyfill","getOffsetParent","svgOffsetParent","getElementRects","getOffsetParentFn","getDimensionsFn","floatingDimensions","isRTL","observeMove","onMove","io","timeoutId","root","cleanup","_io","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","flip$1","size$1","mergedOptions","platformWithCache","computePosition$1","index","useLayoutEffect","useEffect","deepEqual","keys","key","getDPR","roundByDPR","dpr","useLatestRef","ref","React.useRef","useFloating","externalReference","externalFloating","transform","whileElementsMounted","open","setData","React.useState","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","React.useCallback","referenceRef","setFloating","floatingRef","floatingEl","dataRef","hasWhileElementsMounted","whileElementsMountedRef","platformRef","fullData","isMountedRef","ReactDOM.flushSync","refs","React.useMemo","floatingStyles","initialStyles","deps","chevronUp","jsx","chevronUp$1","chevronDown","chevronDown$1","xMark","xMark$1","magnifier","magnifier$1","popoverRootDefault","RCN","SelectComponent","id","defaultSelectedValue","label","placeholder","searchPlaceholder","disabled","multiple","renderOption","renderTag","emptyOptionsPlaceholder","emptySearchPlaceholder","arrowDownIcon","arrowUpIcon","clearIcon","searchIcon","removeTagIcon","optionsListSize","isClearable","isSearchable","searchFunc","isInvalid","isRequired","isInitiallyExpanded","error","isExpanded","onExpand","onCollapse","onSelect","onSearch","onClear","popoverRoot","fitViewPort","selectCnString","cn","selectRef","useRef","optionsListRef","isExpandControlled","localIsExpanded","setLocalIsExpanded","useState","expanded","useMemo","floatingFlip","floatingSize","localValue","setLocalValue","currentValue","activeOption","setActiveOption","clearActiveOption","useCallback","showClearIcon","setShowClearIcon","isDirty","isSearchControlled","localSearch","setLocalSearch","handleExpand","handleCollapse","toggleExpanded","event","handleSelect","optionValue","handleClear","handleArrowClick","handleSearchChange","searchValue","handleClickOutside","_a","handleKeydown","select","code","openKeys","navigateKeys","closeKeys","selectKeys","activeOptionIndex","option","nextOption","displayOptionsList","optionsList","Fragment","handleRemoveMultiple","renderValue","optionToRender","Chip","setOptionsRefHandler","jsxs","createPortal","Label","Select","memo","forwardRef","otter","otter$1","dove","dove$1","kiwi","kiwi$1","paw","paw$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}